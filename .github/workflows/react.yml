env:
  CI: false

name: Node.js CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: NodeJS Install and Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - run: npm install -g npm@latest --legacy-peer-deps --verbose
        working-directory: ./frontend

      - run: npm run build 
        working-directory: ./frontend

  docker:
    needs: build
    name: Docker Build and Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN_TWO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push FE
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./frontend/docker/production/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/manateewatch-fe:latest

      - name: Build and push Nginx
        uses: docker/build-push-action@v3
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/manateewatch-nginx:latest
